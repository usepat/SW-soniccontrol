@startuml class_correspondence

set separator . 
top to bottom direction

class "Answer" as sonicpackage.command.Answer {
  lines
  measured_response
  received
  received_timestamp
  string
  valid
  receive_answer(answer: Iterable[str] | str) -> None
  reset() -> None
}
class "Command" as sonicpackage.command.Command {
  byte_message
  full_message
  status_result
  validators
  add_validators(validators: Union[CommandValidator, Iterable[CommandValidator]]) -> None
  execute(argument: Any, connection: Optional[Communicator]) -> tuple[Answer, dict[str, Any]]
  get_dict() -> dict
  set_argument(argument: Any) -> None
  validate() -> bool
}
class "CommandValidator" as sonicpackage.command.CommandValidator {
  result
  accepts(data: str) -> bool
  generate_named_pattern(pattern: str, keywords: List[str]) -> str
}

class "CommandSet" as sonicpackage.commands.CommandSet {
}
class "CommandSetLegacy" as sonicpackage.commands.CommandSetLegacy {
}

class "Communicator" as sonicpackage.communication.communicator.Communicator {
  DISCONNECTED_EVENT : str
  connection_opened
  handshake_result
  protocol
  {abstract}close_communication() -> None
  {abstract}open_communication(connection_factory: ConnectionFactory)
  {abstract}read_message() -> str
  {abstract}send_and_wait_for_answer(message: Sendable) -> None
}

class "SonicAmp" as sonicpackage.sonicamp_.SonicAmp {
  commands
  info
  serial
  status
  add_command(message: Union[str, Command], validators: Optional[CommandValitors]) -> None
  add_commands(commands: Iterable[Command]) -> None
  disconnect() -> None
  execute_command(message: Union[str, Command], argument: Any) -> str
  get_remote_proc_finished_event() -> asyncio.Event
  has_command(command: Union[str, Command]) -> bool
  send_message(message: str, argument: Any) -> str
}

sonicpackage.command.Command -u-* sonicpackage.commands.CommandSet
sonicpackage.command.Command -u-* sonicpackage.commands.CommandSetLegacy 
sonicpackage.command.Command o-d- sonicpackage.command.Answer
sonicpackage.command.Command o-d- sonicpackage.command.CommandValidator

sonicpackage.sonicamp_.SonicAmp *-u- sonicpackage.command.Command : _commands
sonicpackage.sonicamp_.SonicAmp .u.> sonicpackage.command.Answer


sonicpackage.command.Command -u- sonicpackage.communication.communicator.Communicator



@enduml