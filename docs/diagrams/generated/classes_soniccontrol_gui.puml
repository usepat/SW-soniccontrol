@startuml classes_soniccontrol_gui
set namespaceSeparator none
class "ATConfig" as soniccontrol_gui.views.configuration.transducer_configs.ATConfig {
}
class "ATConfigFrame" as soniccontrol_gui.views.configuration.transducer_configs.ATConfigFrame {
  value
}
class "ATConfigFrameView" as soniccontrol_gui.views.configuration.transducer_configs.ATConfigFrameView {
  atf
  atk
  aton
  att
}
class "ATConfigSchema" as soniccontrol_gui.views.configuration.transducer_configs.ATConfigSchema {
}
class "Animator" as soniccontrol_gui.utils.animator.Animator {
  is_animation_running
  run(num_repeats: int, frame_rate: Optional[float]) -> None
  run_as_load_animation_for_task(task: asyncio.Task) -> None
  stop() -> None
}
class "AppState" as soniccontrol_gui.views.core.app_state.AppState {
  EXECUTION_STATE_PROP_NAME : str
  execution_state
}
class "ButtonStyle" as soniccontrol_gui.widgets.pushbutton.ButtonStyle {
  name
}
class "Capture" as soniccontrol_gui.state_fetching.capture.Capture {
  data_provider
  is_capturing
  end_capture()
  on_update(status: Status)
  start_capture()
}
class "Card" as soniccontrol_gui.widgets.card.Card {
  bind_deep(widget: ttk.tk.Widget, event: str, func: Callable[[Any], Any]) -> None
  configure_command(command: Callable[..., Any])
  mark_card(widget: ttk.tk.Widget, style: str) -> None
  mark_clicked(event: str | None) -> None
  mark_default(event: str | None) -> None
  mark_hover(event: str | None) -> None
}
class "Config" as soniccontrol_gui.views.configuration.transducer_configs.Config {
}
class "ConfigSchema" as soniccontrol_gui.views.configuration.transducer_configs.ConfigSchema {
}
class "Configuration" as soniccontrol_gui.views.configuration.configuration.Configuration {
  current_transducer_config
  on_execution_state_changed(e: PropertyChangeEvent) -> None
}
class "ConfigurationView" as soniccontrol_gui.views.configuration.configuration.ConfigurationView {
  atconfigs
  image
  init_script_path
  selected_transducer_config
  tab_title
  transducer_config_name
  set_add_transducer_config_command(command: Callable[[], None]) -> None
  set_delete_transducer_config_command(command: Callable[[], None]) -> None
  set_save_config_command(command: Callable[[], None]) -> None
  set_submit_config_button_enabled(enabled: bool) -> None
  set_submit_config_button_label(text: str) -> None
  set_submit_transducer_config_command(command: Callable[[], None]) -> None
  set_transducer_config_menu_items(items: Iterable[str]) -> None
  set_transducer_config_selected_command(command: Callable[[], None]) -> None
}
class "ConnectionWindow" as soniccontrol_gui.views.core.connection_window.ConnectionWindow {
  is_connecting
}
class "ConnectionWindowView" as soniccontrol_gui.views.core.connection_window.ConnectionWindowView {
  loading_text
  enable_connect_to_simulation_button(enabled: bool) -> None
  enable_connect_via_url_button(enabled: bool) -> None
  get_url() -> str
  set_connect_to_simulation_button_command(command: Callable[[], None]) -> None
  set_connect_via_url_button_command(command: Callable[[], None]) -> None
  set_ports(ports: List[str]) -> None
  set_refresh_button_command(command: Callable[[], None]) -> None
}
class "CsvTable" as soniccontrol_gui.views.measure.csv_table.CsvTable {
  on_update_data(e: PropertyChangeEvent)
}
class "CsvTableView" as soniccontrol_gui.views.measure.csv_table.CsvTableView {
  set_csv_data(col_data: list, row_data: list) -> None
}
class "CsvWriter" as soniccontrol_gui.state_fetching.csv_writer.CsvWriter {
  close_file()
  open_file(filename: str, header: List[str])
  write_entry(data: dict)
}
class "DataProvider" as soniccontrol_gui.state_fetching.data_provider.DataProvider {
  data
  add_row(row: dict)
}
class "DebounceJob" as soniccontrol_gui.utils.debounce_job.DebounceJob {
}
class "DeviceLogFilter" as soniccontrol_gui.state_fetching.logger.DeviceLogFilter {
  filter(record) -> bool
}
class "DeviceWindow" as soniccontrol_gui.views.core.device_window.DeviceWindow {
  CLOSE_EVENT : str
  close() -> None
  on_disconnect() -> None
}
class "DeviceWindowManager" as soniccontrol_gui.views.core.connection_window.DeviceWindowManager {
  open_known_device_window(sonicamp: SonicDevice, connection_name: str) -> DeviceWindow
  open_rescue_window(communicator: Communicator, connection_name: str) -> DeviceWindow
}
class "DeviceWindowView" as soniccontrol_gui.views.core.device_window.DeviceWindowView {
  is_open
  status_bar_slot
  add_close_callback(callback: Callable[[], None]) -> None
  add_tab_views(tab_views: List[TabView])
  close() -> None
}
class "Document" as soniccontrol_gui.widgets.document.Document {
}
class "DocumentView" as soniccontrol_gui.widgets.document.DocumentView {
}
class "DotAnimationSequence" as soniccontrol_gui.utils.animator.DotAnimationSequence {
}
class "Editor" as soniccontrol_gui.views.control.editor.Editor {
  on_execution_state_changed(e: PropertyChangeEvent) -> None
}
class "EditorView" as soniccontrol_gui.views.control.editor.EditorView {
  current_task
  editor_enabled
  editor_text
  editor_text_view
  image
  single_step_button
  start_pause_continue_button
  stop_button
  tab_title
  add_menu_command(label: str, command: Callable[[], None]) -> None
  highlight_line(line_idx: Optional[int]) -> None
  set_scripting_guide_button_command(command: Callable[[], None]) -> None
}
class "Entry" as soniccontrol_gui.widgets.entry.Entry {
  placeholder
}
class "ExecutionState" as soniccontrol_gui.views.core.app_state.ExecutionState {
  name
}
class "FileBrowseButtonView" as soniccontrol_gui.widgets.file_browse_button.FileBrowseButtonView {
  path
}
class "Flashing" as soniccontrol_gui.views.configuration.flashing.Flashing {
}
class "FlashingView" as soniccontrol_gui.views.configuration.flashing.FlashingView {
  image
  tab_title
}
class "FloatFieldView" as soniccontrol_gui.widgets.procedure_widget.FloatFieldView {
  entry : Entry
  field_name
  label : Label
  value
}
class "Home" as soniccontrol_gui.views.home.Home {
  on_execution_state_changed(e: PropertyChangeEvent) -> None
}
class "HomeView" as soniccontrol_gui.views.home.HomeView {
  freq
  gain
  image
  signal
  tab_title
  set_device_type(text: str) -> None
  set_disconnect_button_command(command: Callable[[], None]) -> None
  set_disconnect_button_enabled(enabled: bool) -> None
  set_firmware_version(text: str) -> None
  set_protocol_version(text: str) -> None
  set_send_button_command(command: Callable[[], None]) -> None
  set_send_button_enabled(enabled: bool) -> None
}
class "HorizontalScrolledFrame" as soniccontrol_gui.widgets.horizontal_scrolled_frame.HorizontalScrolledFrame {
  autohide : bool
  container : Frame
  hscroll : Scrollbar
  winsys
  autohide_scrollbar()
  disable_scrolling()
  enable_scrolling()
  hide_scrollbars()
  show_scrollbars()
  xview()
  xview_moveto(fraction: float)
  xview_scroll(number: int, what: str)
}
class "Image" as soniccontrol_gui.widgets.document.Image {
}
class "ImageLoader" as soniccontrol_gui.utils.image_loader.ImageLoader {
  images : dict[str, ttk.ImageTk.PhotoImage]
  generate_image_key(image_name: str, sizing: tuple[int, int]) -> str
  initialize(master: ttk.Window) -> type[ImageLoader]
  load_image_resource(image_name: str, sizing: tuple[int, int]) -> ttk.ImageTk.PhotoImage
}
class "Info" as soniccontrol_gui.views.info.Info {
}
class "InfoView" as soniccontrol_gui.views.info.InfoView {
  image
  tab_title
  publish() -> None
  set_large_width_layout() -> None
  set_small_width_layout() -> None
}
class "IntFieldView" as soniccontrol_gui.widgets.procedure_widget.IntFieldView {
  entry : Entry
  field_name
  label : Label
  value
}
class "InterpreterState" as soniccontrol_gui.views.control.editor.InterpreterState {
  name
}
class "KnownDeviceWindow" as soniccontrol_gui.views.core.device_window.KnownDeviceWindow {
}
class "LogStorage" as soniccontrol_gui.state_fetching.logger.LogStorage {
  logs
  create_log_handler() -> LogStorageHandler
}
class "LogStorageHandler" as soniccontrol_gui.state_fetching.logger.LogStorage.LogStorageHandler {
  emit(record: logging.LogRecord) -> None
}
class "Logging" as soniccontrol_gui.views.control.logging.Logging {
}
class "LoggingTab" as soniccontrol_gui.views.control.logging.LoggingTab {
}
class "LoggingTabView" as soniccontrol_gui.views.control.logging.LoggingTabView {
  image
  tab_title
  append_text_line(text: str)
}
class "LoggingView" as soniccontrol_gui.views.control.logging.LoggingView {
  image
  tab_title
  add_tabs(tabs: Dict[str, View]) -> None
}
class "MessageFetcher" as soniccontrol_gui.state_fetching.message_fetcher.MessageFetcher {
  MESSAGE_RECEIVED_EVENT : str
  is_running
  run()
  stop()
}
class "Meta" as soniccontrol_gui.views.configuration.transducer_configs.ATConfigSchema.Meta {
  register_as_scheme : bool
  target
}
class "Meta" as soniccontrol_gui.views.configuration.transducer_configs.TransducerConfigSchema.Meta {
  register_as_scheme : bool
  target
}
class "Meta" as soniccontrol_gui.views.configuration.transducer_configs.ConfigSchema.Meta {
  register_as_scheme : bool
  target
}
class "NotDeviceLogFilter" as soniccontrol_gui.state_fetching.logger.NotDeviceLogFilter {
  filter(record) -> bool
}
class "Notebook" as soniccontrol_gui.widgets.notebook.Notebook {
  add_tab(tab: TabView, index: int | None) -> None
  add_tabs(tabs: List[Union[TabView, Tuple[int, TabView]]], keep_tabs: bool, show_titles: bool, show_images: bool) -> None
  configure_tabs(show_titles: bool, show_images: bool) -> None
}
class "ObservableList" as soniccontrol_gui.utils.observable_list.ObservableList {
  EVENT_ITEM_ADDED : Literal['Item Added']
  EVENT_ITEM_DELETED : Literal['Item Deleted']
  EVENT_LIST_CLEARED : Literal['List Cleared']
  append(item)
  clear()
  remove(item)
  remove_at(index: int) -> None
}
class "Plot" as soniccontrol_gui.utils.plotlib.plot.Plot {
  lineDefaultStyle
  lines
  plot
  add_axis(axis_id: str, ylabel: str) -> None
  add_line(dataAttrName: str, axis_id: str) -> None
  tight_layout()
  toggle_line(dataAttrName: str, isVisible: bool)
  update_data(data: pd.DataFrame)
  update_plot()
}
class "PlotBuilder" as soniccontrol_gui.utils.plotlib.plot_builder.PlotBuilder {
  create_spectralplot_uip(subplot: matplotlib.axes.Axes) -> Plot
  create_timeplot_fuip(subplot: matplotlib.axes.Axes) -> Plot
}
class "Plotting" as soniccontrol_gui.views.measure.plotting.Plotting {
  create_toggle_line_callback(attrName: str)
}
class "PlottingView" as soniccontrol_gui.views.measure.plotting.PlottingView {
  add_line(attrName: str, line_label: str, toggle_command: Callable[[], None]) -> None
  get_line_visibility(attrName: str) -> bool
  update_plot()
}
class "ProcControlling" as soniccontrol_gui.views.control.proc_controlling.ProcControlling {
  on_procedure_running(e: Event)
  on_procedure_stopped(_e: Event)
}
class "ProcControllingView" as soniccontrol_gui.views.control.proc_controlling.ProcControllingView {
  image
  procedure_frame
  selected_procedure
  tab_title
  set_procedure_combobox_items(items: Iterable[str]) -> None
  set_procedure_selected_command(command: Callable[[], None]) -> None
  set_running_proc_label(text: str) -> None
  set_start_button_command(command: Callable[[], None]) -> None
  set_start_button_enabled(enabled: bool) -> None
  set_stop_button_command(command: Callable[[], None]) -> None
  set_stop_button_enabled(enabled: bool) -> None
}
class "ProcedureWidget" as soniccontrol_gui.widgets.procedure_widget.ProcedureWidget {
  get_args() -> Optional[Any]
}
class "ProcedureWidgetView" as soniccontrol_gui.widgets.procedure_widget.ProcedureWidgetView {
  field_slot
  hide() -> None
  set_error_message(error_msg: Optional[str]) -> None
  set_procedure_name(procedure_name: str) -> None
  show() -> None
}
class "PushButtonView" as soniccontrol_gui.widgets.pushbutton.PushButtonView {
  configure(label: str, style: ButtonStyle, image: Optional[Tuple[Path, Tuple[int, int]]], command: Optional[Callable[[], None]], enabled: Optional[bool])
}
class "RescueWindow" as soniccontrol_gui.views.core.device_window.RescueWindow {
}
class "ResponsiveLabel" as soniccontrol_gui.widgets.responsive_label.ResponsiveLabel {
  adapt(event: ttk.tk.Event) -> None
  grow_bigger(event: ttk.tk.Event) -> None
}
class "ScriptFile" as soniccontrol_gui.views.control.editor.ScriptFile {
  load_script(filepath: Optional[str])
  save_script(filepath: Optional[str])
}
class "ScriptingGuide" as soniccontrol_gui.views.control.scriptingguide.ScriptingGuide {
  insert_text(text: str) -> None
}
class "ScriptingGuideCardDataDict" as soniccontrol_gui.utils.types.ScriptingGuideCardDataDict {
  arguments : str
  description : str
  example : str
  keyword : str
}
class "SerialMonitor" as soniccontrol_gui.views.control.serialmonitor.SerialMonitor {
  on_execution_state_changed(e: PropertyChangeEvent) -> None
}
class "SerialMonitorView" as soniccontrol_gui.views.control.serialmonitor.SerialMonitorView {
  command_line_input
  image
  tab_title
  add_text_line(text: str)
  bind_command_line_input_on_down_pressed(command: Callable[[], None])
  bind_command_line_input_on_return_pressed(command: Callable[[], None])
  bind_command_line_input_on_up_pressed(command: Callable[[], None])
  clear()
  set_command_line_input_enabled(enabled: bool) -> None
  set_loading_text(text: str) -> None
  set_read_button_command(command: Callable[[], None])
  set_send_command_button_command(command: Callable[[], None])
  set_send_command_button_enabled(enabled: bool) -> None
}
class "SingletonMeta" as soniccontrol_gui.utils.image_loader.SingletonMeta {
}
class "SonicMeasure" as soniccontrol_gui.views.measure.sonicmeasure.SonicMeasure {
  on_status_update(status: Status)
}
class "SonicMeasureView" as soniccontrol_gui.views.measure.sonicmeasure.SonicMeasureView {
  image
  tab_title
  add_tabs(tabs: Dict[str, View]) -> None
  set_capture_button_command(command)
  set_capture_button_label(label: str)
}
class "Spinbox" as soniccontrol_gui.widgets.spinbox.Spinbox {
  placeholder
  activate_placeholder() -> None
}
class "StatusBar" as soniccontrol_gui.views.core.status.StatusBar {
  on_expand_status_panel() -> None
  on_update_status(status: Status)
}
class "StatusBarView" as soniccontrol_gui.views.core.status.StatusBarView {
  panel_frame
  expand_panel_frame(expand: bool) -> None
  on_script_start() -> None
  on_script_stop() -> None
  set_status_clicked_command(command: Callable[[], None]) -> None
  update_labels(mode: str, freq: str, gain: str, temp: str, urms: str, irms: str, phase: str, signal: str)
}
class "StatusPanel" as soniccontrol_gui.views.core.status.StatusPanel {
  on_update_status(status: Status)
}
class "StatusPanelView" as soniccontrol_gui.views.core.status.StatusPanelView {
  set_signal_image(image_path: Path, sizing: Tuple[int, int]) -> None
  update_stats(freq: float, gain: float, temp: float, urms: str, irms: str, phase: str, signal: str)
}
class "TabView" as soniccontrol_gui.view.TabView {
  image
  tab_title
}
class "Text" as soniccontrol_gui.widgets.document.Text {
}
class "TimeFieldView" as soniccontrol_gui.widgets.procedure_widget.TimeFieldView {
  field_name
  value
}
class "TransducerConfig" as soniccontrol_gui.views.configuration.transducer_configs.TransducerConfig {
}
class "TransducerConfigSchema" as soniccontrol_gui.views.configuration.transducer_configs.TransducerConfigSchema {
  init_script_path : Method
  deserialize_path(value)
  serialize_path(obj) -> str | None
}
class "UIComponent" as soniccontrol_gui.ui_component.UIComponent {
  logger
  parent
  view
}
class "Updater" as soniccontrol_gui.state_fetching.updater.Updater {
  running
  task
  execute() -> None
  stop_execution() -> None
}
class "View" as soniccontrol_gui.view.View {
  parent
}
soniccontrol_gui.view.TabView --|> soniccontrol_gui.view.View
soniccontrol_gui.views.configuration.configuration.Configuration --|> soniccontrol_gui.ui_component.UIComponent
soniccontrol_gui.views.configuration.configuration.ConfigurationView --|> soniccontrol_gui.view.TabView
soniccontrol_gui.views.configuration.flashing.Flashing --|> soniccontrol_gui.ui_component.UIComponent
soniccontrol_gui.views.configuration.flashing.FlashingView --|> soniccontrol_gui.view.TabView
soniccontrol_gui.views.configuration.transducer_configs.ATConfigFrame --|> soniccontrol_gui.ui_component.UIComponent
soniccontrol_gui.views.configuration.transducer_configs.ATConfigFrameView --|> soniccontrol_gui.view.View
soniccontrol_gui.views.control.editor.Editor --|> soniccontrol_gui.ui_component.UIComponent
soniccontrol_gui.views.control.editor.EditorView --|> soniccontrol_gui.view.TabView
soniccontrol_gui.views.control.logging.Logging --|> soniccontrol_gui.ui_component.UIComponent
soniccontrol_gui.views.control.logging.LoggingTab --|> soniccontrol_gui.ui_component.UIComponent
soniccontrol_gui.views.control.logging.LoggingTabView --|> soniccontrol_gui.view.TabView
soniccontrol_gui.views.control.logging.LoggingView --|> soniccontrol_gui.view.TabView
soniccontrol_gui.views.control.proc_controlling.ProcControlling --|> soniccontrol_gui.ui_component.UIComponent
soniccontrol_gui.views.control.proc_controlling.ProcControllingView --|> soniccontrol_gui.view.TabView
soniccontrol_gui.views.control.serialmonitor.SerialMonitor --|> soniccontrol_gui.ui_component.UIComponent
soniccontrol_gui.views.control.serialmonitor.SerialMonitorView --|> soniccontrol_gui.view.TabView
soniccontrol_gui.views.core.connection_window.ConnectionWindow --|> soniccontrol_gui.ui_component.UIComponent
soniccontrol_gui.views.core.connection_window.ConnectionWindowView --|> soniccontrol_gui.view.View
soniccontrol_gui.views.core.device_window.DeviceWindow --|> soniccontrol_gui.ui_component.UIComponent
soniccontrol_gui.views.core.device_window.KnownDeviceWindow --|> soniccontrol_gui.views.core.device_window.DeviceWindow
soniccontrol_gui.views.core.device_window.RescueWindow --|> soniccontrol_gui.views.core.device_window.DeviceWindow
soniccontrol_gui.views.core.status.StatusBar --|> soniccontrol_gui.ui_component.UIComponent
soniccontrol_gui.views.core.status.StatusBarView --|> soniccontrol_gui.view.View
soniccontrol_gui.views.core.status.StatusPanel --|> soniccontrol_gui.ui_component.UIComponent
soniccontrol_gui.views.core.status.StatusPanelView --|> soniccontrol_gui.view.View
soniccontrol_gui.views.home.Home --|> soniccontrol_gui.ui_component.UIComponent
soniccontrol_gui.views.home.HomeView --|> soniccontrol_gui.view.TabView
soniccontrol_gui.views.info.Info --|> soniccontrol_gui.ui_component.UIComponent
soniccontrol_gui.views.info.InfoView --|> soniccontrol_gui.view.TabView
soniccontrol_gui.views.measure.csv_table.CsvTable --|> soniccontrol_gui.ui_component.UIComponent
soniccontrol_gui.views.measure.csv_table.CsvTableView --|> soniccontrol_gui.view.TabView
soniccontrol_gui.views.measure.plotting.Plotting --|> soniccontrol_gui.ui_component.UIComponent
soniccontrol_gui.views.measure.plotting.PlottingView --|> soniccontrol_gui.view.View
soniccontrol_gui.views.measure.sonicmeasure.SonicMeasure --|> soniccontrol_gui.ui_component.UIComponent
soniccontrol_gui.views.measure.sonicmeasure.SonicMeasureView --|> soniccontrol_gui.view.TabView
soniccontrol_gui.widgets.document.Document --|> soniccontrol_gui.ui_component.UIComponent
soniccontrol_gui.widgets.document.DocumentView --|> soniccontrol_gui.view.View
soniccontrol_gui.widgets.file_browse_button.FileBrowseButtonView --|> soniccontrol_gui.view.View
soniccontrol_gui.widgets.procedure_widget.FloatFieldView --|> soniccontrol_gui.view.View
soniccontrol_gui.widgets.procedure_widget.IntFieldView --|> soniccontrol_gui.view.View
soniccontrol_gui.widgets.procedure_widget.ProcedureWidget --|> soniccontrol_gui.ui_component.UIComponent
soniccontrol_gui.widgets.procedure_widget.ProcedureWidgetView --|> soniccontrol_gui.view.View
soniccontrol_gui.widgets.procedure_widget.TimeFieldView --|> soniccontrol_gui.view.View
soniccontrol_gui.state_fetching.capture.Capture --* soniccontrol_gui.views.measure.sonicmeasure.SonicMeasure : _capture
soniccontrol_gui.state_fetching.csv_writer.CsvWriter --* soniccontrol_gui.state_fetching.capture.Capture : _csv_data_collector
soniccontrol_gui.state_fetching.data_provider.DataProvider --* soniccontrol_gui.state_fetching.capture.Capture : _data_provider
soniccontrol_gui.state_fetching.logger.LogStorage --* soniccontrol_gui.views.control.logging.Logging : _app_logStorage
soniccontrol_gui.state_fetching.logger.LogStorage --* soniccontrol_gui.views.control.logging.Logging : _device_logStorage
soniccontrol_gui.state_fetching.logger.LogStorage --* soniccontrol_gui.views.core.device_window.RescueWindow : _logStorage
soniccontrol_gui.state_fetching.message_fetcher.MessageFetcher --* soniccontrol_gui.views.control.serialmonitor.SerialMonitor : _message_fetcher
soniccontrol_gui.state_fetching.updater.Updater --* soniccontrol_gui.views.core.device_window.KnownDeviceWindow : _updater
soniccontrol_gui.utils.animator.Animator --* soniccontrol_gui.views.control.serialmonitor.SerialMonitor : _animation
soniccontrol_gui.utils.observable_list.ObservableList --* soniccontrol_gui.state_fetching.logger.LogStorage : _logs
soniccontrol_gui.utils.plotlib.plot.Plot --* soniccontrol_gui.views.measure.sonicmeasure.SonicMeasure : _timeplot
soniccontrol_gui.utils.plotlib.plot.Plot --* soniccontrol_gui.views.measure.sonicmeasure.SonicMeasure : _spectralplot
soniccontrol_gui.views.configuration.configuration.Configuration --* soniccontrol_gui.views.core.device_window.KnownDeviceWindow : _configuration
soniccontrol_gui.views.configuration.configuration.ConfigurationView --* soniccontrol_gui.views.configuration.configuration.Configuration : _view
soniccontrol_gui.views.configuration.flashing.Flashing --* soniccontrol_gui.views.core.device_window.KnownDeviceWindow : _flashing
soniccontrol_gui.views.configuration.flashing.FlashingView --* soniccontrol_gui.views.configuration.flashing.Flashing : _view
soniccontrol_gui.views.configuration.transducer_configs.ATConfig --* soniccontrol_gui.views.configuration.transducer_configs.ATConfigSchema.Meta : target
soniccontrol_gui.views.configuration.transducer_configs.ATConfigFrameView --* soniccontrol_gui.views.configuration.transducer_configs.ATConfigFrame : _view
soniccontrol_gui.views.configuration.transducer_configs.Config --* soniccontrol_gui.views.configuration.configuration.Configuration : _config
soniccontrol_gui.views.configuration.transducer_configs.Config --* soniccontrol_gui.views.configuration.transducer_configs.ConfigSchema.Meta : target
soniccontrol_gui.views.configuration.transducer_configs.ConfigSchema --* soniccontrol_gui.views.configuration.configuration.Configuration : _config_schema
soniccontrol_gui.views.configuration.transducer_configs.TransducerConfig --* soniccontrol_gui.views.configuration.transducer_configs.TransducerConfigSchema.Meta : target
soniccontrol_gui.views.control.editor.Editor --* soniccontrol_gui.views.core.device_window.KnownDeviceWindow : _editor
soniccontrol_gui.views.control.editor.EditorView --* soniccontrol_gui.views.control.editor.Editor : _view
soniccontrol_gui.views.control.editor.ScriptFile --* soniccontrol_gui.views.control.editor.Editor : _script
soniccontrol_gui.views.control.logging.Logging --* soniccontrol_gui.views.core.device_window.KnownDeviceWindow : _logging
soniccontrol_gui.views.control.logging.LoggingTab --* soniccontrol_gui.views.control.logging.Logging : _application_log_tab
soniccontrol_gui.views.control.logging.LoggingTab --* soniccontrol_gui.views.control.logging.Logging : _device_log_tab
soniccontrol_gui.views.control.logging.LoggingTab --* soniccontrol_gui.views.core.device_window.RescueWindow : _logging
soniccontrol_gui.views.control.logging.LoggingTabView --* soniccontrol_gui.views.control.logging.LoggingTab : _view
soniccontrol_gui.views.control.logging.LoggingView --* soniccontrol_gui.views.control.logging.Logging : _view
soniccontrol_gui.views.control.proc_controlling.ProcControlling --* soniccontrol_gui.views.core.device_window.KnownDeviceWindow : _proc_controlling
soniccontrol_gui.views.control.proc_controlling.ProcControllingView --* soniccontrol_gui.views.control.proc_controlling.ProcControlling : _view
soniccontrol_gui.views.control.serialmonitor.SerialMonitor --* soniccontrol_gui.views.core.device_window.KnownDeviceWindow : _serialmonitor
soniccontrol_gui.views.control.serialmonitor.SerialMonitor --* soniccontrol_gui.views.core.device_window.RescueWindow : _serialmonitor
soniccontrol_gui.views.control.serialmonitor.SerialMonitorView --* soniccontrol_gui.views.control.serialmonitor.SerialMonitor : _view
soniccontrol_gui.views.core.app_state.AppState --* soniccontrol_gui.views.core.device_window.DeviceWindow : _app_state
soniccontrol_gui.views.core.connection_window.ConnectionWindowView --* soniccontrol_gui.views.core.connection_window.ConnectionWindow : _view
soniccontrol_gui.views.core.connection_window.DeviceWindowManager --* soniccontrol_gui.views.core.connection_window.ConnectionWindow : _device_window_manager
soniccontrol_gui.views.core.device_window.DeviceWindowView --* soniccontrol_gui.views.core.device_window.KnownDeviceWindow : _view
soniccontrol_gui.views.core.device_window.DeviceWindowView --* soniccontrol_gui.views.core.device_window.RescueWindow : _view
soniccontrol_gui.views.core.status.StatusBar --* soniccontrol_gui.views.core.device_window.KnownDeviceWindow : _status_bar
soniccontrol_gui.views.core.status.StatusBarView --* soniccontrol_gui.views.core.status.StatusBar : _view
soniccontrol_gui.views.core.status.StatusPanel --* soniccontrol_gui.views.core.status.StatusBar : _status_panel
soniccontrol_gui.views.core.status.StatusPanelView --* soniccontrol_gui.views.core.status.StatusPanel : _view
soniccontrol_gui.views.home.Home --* soniccontrol_gui.views.core.device_window.KnownDeviceWindow : _home
soniccontrol_gui.views.home.HomeView --* soniccontrol_gui.views.home.Home : _view
soniccontrol_gui.views.info.Info --* soniccontrol_gui.views.core.device_window.KnownDeviceWindow : _info
soniccontrol_gui.views.info.InfoView --* soniccontrol_gui.views.info.Info : _view
soniccontrol_gui.views.measure.csv_table.CsvTable --* soniccontrol_gui.views.measure.sonicmeasure.SonicMeasure : _csv_table
soniccontrol_gui.views.measure.plotting.Plotting --* soniccontrol_gui.views.measure.sonicmeasure.SonicMeasure : _timeplottab
soniccontrol_gui.views.measure.plotting.Plotting --* soniccontrol_gui.views.measure.sonicmeasure.SonicMeasure : _spectralplottab
soniccontrol_gui.views.measure.plotting.PlottingView --* soniccontrol_gui.views.measure.plotting.Plotting : _view
soniccontrol_gui.views.measure.sonicmeasure.SonicMeasure --* soniccontrol_gui.views.core.device_window.KnownDeviceWindow : _sonicmeasure
soniccontrol_gui.views.measure.sonicmeasure.SonicMeasureView --* soniccontrol_gui.views.measure.sonicmeasure.SonicMeasure : _view
soniccontrol_gui.widgets.document.Document --* soniccontrol_gui.views.info.InfoView : _home_help_frame
soniccontrol_gui.widgets.document.DocumentView --* soniccontrol_gui.widgets.document.Document : _view
soniccontrol_gui.widgets.file_browse_button.FileBrowseButtonView --* soniccontrol_gui.views.configuration.configuration.ConfigurationView : _browse_script_init_button
soniccontrol_gui.widgets.file_browse_button.FileBrowseButtonView --* soniccontrol_gui.views.configuration.flashing.FlashingView : _browse_flash_file_button
soniccontrol_gui.widgets.horizontal_scrolled_frame.HorizontalScrolledFrame --* soniccontrol_gui.views.core.status.StatusBarView : _scrolled_info
soniccontrol_gui.widgets.notebook.Notebook --* soniccontrol_gui.views.core.device_window.DeviceWindowView : _notebook
soniccontrol_gui.widgets.procedure_widget.ProcedureWidgetView --* soniccontrol_gui.widgets.procedure_widget.ProcedureWidget : _view
soniccontrol_gui.widgets.pushbutton.PushButtonView --* soniccontrol_gui.views.control.editor.EditorView : _start_pause_continue_button
soniccontrol_gui.widgets.pushbutton.PushButtonView --* soniccontrol_gui.views.control.editor.EditorView : _single_step_button
soniccontrol_gui.widgets.pushbutton.PushButtonView --* soniccontrol_gui.views.control.editor.EditorView : _stop_button
soniccontrol_gui.widgets.spinbox.Spinbox --* soniccontrol_gui.views.home.HomeView : _freq_spinbox
soniccontrol_gui.widgets.spinbox.Spinbox --* soniccontrol_gui.views.home.HomeView : _gain_spinbox
soniccontrol_gui.ui_component.UIComponent --o soniccontrol_gui.views.configuration.configuration.ConfigurationView : _presenter
soniccontrol_gui.ui_component.UIComponent --o soniccontrol_gui.views.info.InfoView : _presenter
soniccontrol_gui.utils.observable_list.ObservableList --o soniccontrol_gui.views.control.logging.LoggingTab : _logs
soniccontrol_gui.utils.plotlib.plot.Plot --o soniccontrol_gui.views.measure.plotting.Plotting : _plot
soniccontrol_gui.view.View --o soniccontrol_gui.ui_component.UIComponent : _view
soniccontrol_gui.views.control.editor.InterpreterState --o soniccontrol_gui.views.control.editor.Editor : _interpreter_state
soniccontrol_gui.views.core.app_state.AppState --o soniccontrol_gui.views.configuration.flashing.Flashing : _app_state
soniccontrol_gui.views.core.app_state.AppState --o soniccontrol_gui.views.control.editor.Editor : _app_state
soniccontrol_gui.views.core.app_state.AppState --o soniccontrol_gui.views.control.proc_controlling.ProcControlling : _app_state
soniccontrol_gui.views.core.app_state.ExecutionState --o soniccontrol_gui.views.core.app_state.AppState : _execution_state
@enduml
